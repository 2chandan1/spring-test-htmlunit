= Spring Test MVC and HtmlUnit Integration

This project's aim is to provide integration between http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/testing.html#spring-mvc-test-framework[Spring MVC Test] and http://htmlunit.sourceforge.net/[HtmlUnit]. This simplifies performing end to end testing when using HTML based views.

= Why use it?

http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/testing.html#spring-mvc-test-framework[Spring MVC Test] makes it easy to test your controllers wired to services. However, testing HTML based views could be simplified drastically. Spring Test MVC and HtmlUnit eases testing of HTML based views by providing:

* Support for testing with JavaScript in the HTML views
* Integration with http://htmlunit.sourceforge.net/[HtmlUnit]
* Integration with http://seleniumhq.org/projects/webdriver/[WebDriver] via https://code.google.com/p/selenium/wiki/HtmlUnitDriver[HtmlUnitWebDriver] For an example see https://github.com/spring-projects/spring-test-mvc-htmlunit/blob/master/mail-webapp/src/test/java/org/springframework/test/web/servlet/htmlunit/webdriver/MockMvcCreateMessageTest.java[MockMvcCreateMessageTest]
* http://www.gebish.org/manual/current/testing.html#spock_junit__testng[Geb Spock] integration For an example see https://github.com/spring-projects/spring-test-mvc-htmlunit/blob/master/mail-webapp/src/test/groovy/org/springframework/test/web/servlet/htmlunit/geb/CreateMessagesISpec.groovy[CreateMessagesISpec]
* Easily mocking services for fast & thorough testing on views and controllers. For example, you can quickly and easily test behavior when no results should be produced, one page of results, two pages of results, etc.

= Getting Started

== Building with Maven

The project is available in the https://github.com/SpringSource/spring-framework/wiki/SpringSource-repository-FAQ[Spring Maven Repository].

=== Maven Milestone

If you want the latest milestone, ensure you have the following repository in your pom.xml:

[source,xml]
----
<repository>
	<id>spring-milestone</id>
	<url>https://repo.spring.io/milestone</url>
</repository>
----

Then ensure you have added the dependency:

[source,xml]
----
<dependency>
	<groupId>org.springframework</groupId>
	<artifactId>spring-test-mvc-htmlunit</artifactId>
	<version>1.0.0.M1</version>
	<scope>test</scope>
</dependency>
----

=== Maven Snapshot

If you want the latest snapshot, ensure you have the following repository in your pom.xml:

[source,xml]
----
<repository>
	<id>spring-snapshot</id>
	<url>https://repo.spring.io/snapshot</url>
</repository>
----

Then ensure you have added the dependency:

[source,xml]
----
<dependency>
	<groupId>org.springframework</groupId>
	<artifactId>spring-test-mvc-htmlunit</artifactId>
	<version>1.0.0.BUILD-SNAPSHOT</version>
	<scope>test</scope>
</dependency>
----

== Running the sample project

The following provides information on setting up a development environment that can run https://github.com/spring-projects/spring-test-mvc-htmlunit/tree/master/mail-webapp[the sample] in http://www.springsource.org/sts[Spring Tool Suite 3.0.0]. Other IDE's should work using Gradle's IDE support, but have not been tested.

* IDE Setup
** Install Spring Tool Suite 3.0.0+
** You will need the following plugins installed (can be found on the Extensions Page)
** Gradle Eclipse
** Groovy Eclipse plugin
** Groovy 1.8 compiler should be enabled in Window->Preferences Groovy->Compiler
* Importing the project into Spring Tool Suite
** File->Import...->Gradle Project

Any tests ending in ITest or ISpec require the application to be deployed to http://localhost:9990/mail/. You should be able to do this easily using Eclipse WTP. Other tests run using Sprint Test MVC and do not require the application to be deployed.

= Minimum Requirements

== Minimum JDK

The miniumum JDK is 1.6 Not only has http://www.oracle.com/technetwork/java/eol-135779.html[Java 1.5 reached EOL], but this is necessary to keep up to date with dependencies since https://groups.google.com/forum/#!searchin/selenium-developers/java$206/selenium-developers/aB5NqZkJIpQ/VDZhrLuh7IIJ[Selenium requires JDK 1.6].

== Minimum Spring Version

The project should work with Spring 3.2.0+, but use with Spring 4.0 is encouraged.

= Contributing

Before contributing or logging an issue please be sure to the issue does not already exist in this project's https://github.com/SpringSource/spring-test-mvc-htmlunit/issues[issue tracking]. If one does not exist, please create an issue.

If you see anything you'd like to change we encourage taking advantage of github's social coding features by making the change in a [fork of this repository](http://help.github.com/forking/) and sending a pull request.

Before we accept a non-trivial patch or pull request we will need you to sign the https://support.springsource.com/spring_committer_signup[contributor's agreement]. Signing the contributor's agreement does not grant anyone commit rights to the main repository, but it does mean that we can accept your contributions, and you will get an author credit if we do. Active contributors might be asked to join the core team, and given the ability to merge pull requests.

= License

The Spring Test MVC HtmlUnit project is available under version 2.0 of the http://www.apache.org/licenses/LICENSE-2.0[Apache License].